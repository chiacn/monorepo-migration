name: Deploy apps to GitHub Pages (monorepo -> external repos)

on:
  push:
    branches: ["main"]
    paths:
      - ".github/workflows/**"
      - "apps/next-blog/**"
      - "apps/text-to-diagram/**"
      - "libs/**"
      - "package.json"
      - "package-lock.json"
      - "nx.json"
      - "project.json"
  workflow_dispatch:
    inputs:
      app:
        description: "Select app to deploy (leave empty to deploy all)"
        required: false
        type: choice
        options: ["", "next-blog", "text-to-diagram"]

permissions:
  contents: read

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        app: [next-blog, text-to-diagram]
        include:
          - app: next-blog
            isNext: true
            publishDir: dist/apps/next-blog/out/gh-pages-next-blog
            externalRepo: chiacn/gh-pages-next-blog
            workerUrlSecret: CF_WORKER_URL
            workerDir: apps/groq-proxy
          - app: text-to-diagram
            isNext: false
            publishDir: dist/apps/text-to-diagram/out/gh-pages-text-diagram
            externalRepo: chiacn/gh-pages-text-diagram
            workerUrlSecret: CF_WORKER_URL
            workerDir: apps/groq-proxy

    concurrency:
      group: pages-${{ matrix.app }}
      cancel-in-progress: false

    env:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

    steps:
      - uses: actions/checkout@v4

      # (선택) Nx/Next 캐시 복구
      - name: Restore Nx/Next cache
        uses: actions/cache@v4
        with:
          path: |
            **/.next/cache
            node_modules/.cache/nx
          key: ${{ runner.os }}-nx-${{ hashFiles('package-lock.json') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-nx-${{ hashFiles('package-lock.json') }}-

      # Docker 레이어 캐시를 위한 buildx
      - uses: docker/setup-buildx-action@v3

      # 로컬 Dockerfile로 이미지 빌드(푸시 X, 캐시 O, 로컬에 로드 O)
      - uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          tags: ci-nx-wrangler:latest
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # 컨테이너에서 Nx 빌드
      - name: Build (and export if Next) inside container
        if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.app == '' || matrix.app == github.event.inputs.app }}
        run: |
          set -euo pipefail
          docker run --rm \
          --user "$(id -u):$(id -g)" \
          -e HOME=/workspace \
          -e npm_config_cache=/workspace/.npm \
          -e CF_WORKER_URL='${{ secrets[matrix.workerUrlSecret] }}' \
          -e CLOUDFLARE_API_TOKEN='${{ secrets.CLOUDFLARE_API_TOKEN }}' \
          -e CLOUDFLARE_ACCOUNT_ID='${{ secrets.CLOUDFLARE_ACCOUNT_ID }}' \
          -v "$GITHUB_WORKSPACE":/workspace \
          -w /workspace \
          ci-nx-wrangler \
          bash -lc '
            mkdir -p /workspace/.npm &&
            npm ci &&
            npx nx build "${{ matrix.app }}"
          '

      # 헬스체크 -> 실패 시 wrangler 재배포
      - name: Verify Worker (inside container) or redeploy
        if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.app == '' || matrix.app == github.event.inputs.app }}
        run: |
          set -euo pipefail
          docker run --rm \
          --user "$(id -u):$(id -g)" \
          -e HOME=/workspace \
          -e npm_config_cache=/workspace/.npm \
          -e CF_WORKER_URL='${{ secrets[matrix.workerUrlSecret] }}' \
          -e CLOUDFLARE_API_TOKEN='${{ secrets.CLOUDFLARE_API_TOKEN }}' \
          -e CLOUDFLARE_ACCOUNT_ID='${{ secrets.CLOUDFLARE_ACCOUNT_ID }}' \
          -v "$GITHUB_WORKSPACE":/workspace \
          -w /workspace \
          ci-nx-wrangler \
          bash -lc '
            mkdir -p /workspace/.npm &&
            node scripts/verify-worker.js ||
            npx -y wrangler@3 deploy \
            --config "${{ matrix.workerDir }}/wrangler.toml"
          '

      # 호스트에서 gh-pages 퍼블리시
      - name: Deploy static to external repo (gh-pages)
        if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.app == '' || matrix.app == github.event.inputs.app }}
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ secrets.PAT_REPO }}
          external_repository: ${{ matrix.externalRepo }}
          publish_branch: gh-pages
          publish_dir: ${{ matrix.publishDir }}
          allow_empty_commit: true # 변화 없어도 커밋 생성
