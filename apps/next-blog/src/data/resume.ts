export const workExperienceData = [
  {
    title: "스마트스코어",
    date: "2023.04 - 2024.09",
    position: "Frontend Engineer",
    description: `스마트스코어는 골프 관련 데이터와 서비스를 제공하는 플랫폼
                기업입니다.
                20개 이상의 서비스가 운영되고 있으며, 각 서비스들은 스코어
                데이터 등 골프와 관련된 데이터 중심으로 긴밀하게 연결되어
                있습니다.`,
    projects: [
      {
        title: "라이브스코어",
        date: "23.11 - 24.08",
        description:
          "골프장에 참여한 플레이어들만 볼 수 있었던 리더보드, 실시간 스코어 등을 라이브스코어 방에 참여한 누구나 보고 소통할 수있도록 만든 서비스입니다.",

        sub_description: [
          {
            title:
              "1. sendbird js sdk를 기반으로 라이브스코어 채팅 모듈 Vue 공통 컴포넌트화",
            description: [],
          },
          {
            title:
              "2. 기존 서비스와 라이브스코어(신규) 서비스의 상태를 효과적으로 통합하기 위한 구조 설계",
            description: [
              "서버 상태를 담당하는 Vuex store와 라이브스코어 방의 로직에 따라 캐싱과 polling 빈도를 선언적으로 관리하는 Data Request Layer를 나누어 복잡해진(통합된) 비즈니스로직을 효과적으로 관리할 수 있는 구조를 설계해 DX 개선",
              "기존 서비스(스코어)를 별도의 팀이 관리하고 있다는 점을 고려하여, 기존 서비스의 상태와 신규 서비스와 통합되는 상태 및 로직을 별도의 레이어로 구조화하여 각 서비스에 대한 잦은 UI 변경 요청에 효과적으로 대응",
            ],
          },
          {
            title:
              "3. 기존 스와이프 로직을 Headless 컴포넌트로 구성하고, 라운드 index 값만 주입하여 사용할 수 있도록 공통 컴포넌트화",
            description: [],
          },
          {
            title:
              "4. 입장 권한을 방장, 플레이어, 갤러리(관중)으로 세분화한 뒤 결제 여부, 라운드 종류 등 라이브스코어 방의 라이프사이클에 따라 UI가 전환되는 페이지 구조 설계",
            description: [],
          },
        ],
        techStack: "Vue2 | Vuex | Webview",
      },
      {
        title: `스마트스코어\n스토어`,
        date: "23.08 - 23.12",
        description:
          "스마트 스코어 스토어는 스마트스코어의 체험형 매장 전용 o2o 서비스로, 매장 안내 및 미니게임, 시타 정보를 제공하는 서비스입니다. 기존 앱과의 의존성에서 발생하던 성능 문제를 해결하고 빠른 로딩 속도를 제공하기 위해 독립적인 웹뷰 구조로 개발되었습니다.",
        sub_description: [
          "$fetch 객체와 useAsyncData 함수를 래핑하여 data fetching 모듈 세팅",
          "기존의 스마트스코어 레거시 환경에서 벗어나 독립적인 웹뷰로 구성하여 페이지 로딩시간을 단축",
          "매장 입장 시 기존 webview에서 스토어 webview로의 전환을 위한 네이티브 브릿지 인터페이스 정의",
          "네이티브를 매개로 하여 두 web 사이의 화면을 전환하며 로그인 상태, 스토어 정보 등을 전달, 동기화하는 로직 개발",
        ],
        techStack: "Vue3 | Nuxt3 | Typescript | Webview | Pinia | scss",
      },
      {
        title: "마제스티",
        date: "23.04 - 23.09",
        description:
          "프리미엄 골프채 브랜드인 마제스티의 리뉴얼 웹사이트를 구축하는 프로젝트입니다.",
        sub_description: [
          "axios instance를 이용한 data fetching 및 파일 다운로드 로직 모듈화, interceptor와 pinia store를 사용하여 인증 토큰 관리 로직 구축",
          "OAuth2.0 기반의 sns 로그인 로직 구현",
          "모노레포 환경에서 docker 기반 CI/CD 파이프라인 구축",
          "렌탈, 이벤트, 로그인 등 step별로 진행되는 페이지의 퍼널 구조를 추상화하여 사은품 종류, 국가 등 조건에 따른 분기를 선언적으로 관리하여 코드의 양을 줄이고 가독성 개선",
          "Quill editor sdk를 활용하여 기존의 이미지 업로드, 조회 로직과 통합하는 커스텀 컴포넌트 개발",
        ],
        techStack: "Vue3 | Typescript | Pinia | Lerna | nx | i18n | scss",
      },
    ],
  },

  {
    title: "블루코어",
    date: "2021.03 - 2022.07",
    position: "FullStack Engineer",
    description: `SI / Solution`,
    projects: [
      {
        title: `항저우\n아시안게임\nGMS`,
        date: "21.03 - 22.07",
        description: `GMS(Game Management System)는 특정 행사가 운영되는 동안 [유니폼, 교통, 항공, 의료, 의전] 등 대회 전반에 걸쳐 지원되는 서비스를 효율적으로 운영하기 위한 관리 시스템입니다.
        항저우 아시안게임 GMS의 유니폼 관리(UNM uniform management)와 교통 관리(TRA transportation) 시스템을 맡아 개발 및 협업하였습니다.
        `,

        sub_description: [
          {
            title:
              "1. 유니폼 관리 (UNM) 시스템 및 교통 관리 (TRA) 시스템 기능 구현",
            description: [
              "UNM: 치수 및 권한별 정보를 기반으로 유니폼 키트를 조합하고 경기장으로 배송 및 수령, 인원별 지급, 반품까지 포함하는 통합 유니폼 관리 시스템 개발",
              "TRA: GMS에 등록된 운전자와 승객 정보를 기반으로 차량 및 노선 관리, 타임테이블, 권한 별 교통 서비스의 예약 및 배정, 차량 운행 모니터링 시스템 개발. UNM 배포 이후 DB 스키마 설계에서부터 배포까지 진행",
            ],
          },
          {
            title: "2. 배포 시간 70% 단축",
            description: [
              "GMS-frontend의 CI/CD 파이프라인 분석 후, Docker multi-stage-build 및 BuildKit 캐시 기능을 통해 의존성 캐싱, 정적 리소스를 분할 COPY하여 배포 시간을 70%이상 단축",
            ],
          },
          {
            title:
              "3. 쿼리 실행 계획 분석 후 쿼리 튜닝을 통해 약 500만 건의 데이터 조회 시 1분 대 -> 0.5초 대로 성능 개선",
            description: [
              "여러 시스템의 테이블과 조인된 쿼리 구조에서 join 순서 및 종류를 비즈니스 로직 흐름에 맞게 재설계하여 효율화",
            ],
          },
          {
            title: "4. 복잡한 비즈니스 로직 처리 경험",
            description: [
              `  GMS에서는 '유니폼'이라는 개별 서비스일지라도 인원 관리, 교통, 항공 등 여러 프로세스가 함께 다루어졌습니다. 예를 들어 제가 맡은 유니폼 관리 시스템에서는 유니폼 조합을 생성하여 선수, 자원봉사자 등에게까지 분배되는 일종의 SCM 프로세스를 구현하였습니다.
  \n이 과정에서 인원 관리, 자원봉사자 관리 시스템 등 타 시스템과 연동되며 상호 영향을 주고 받는 부분이 많았기 때문에 하나의 로직을 변경하는데도 타 시스템의 기획서나 해당 개발자와의 커뮤니케이션 등 여러 근거를 검토하여 이루어졌습니다.`,
            ],
          },
          {
            title: "5. 체계적인 커뮤니케이션 경험",
            description: [
              `  시스템 별 약 150페이지 가량의 요구사항 정의서를 바탕으로 협력 업체인 알리바바 클라우드와 근거 중심의 커뮤니케이션이 이루어져야 했기 때문에 프로젝트 전반의 서비스 흐름을 알아야 했습니다. \n\n비교적 큰 규모의 프로젝트였기 때문에 용어와 규칙이 분명하였고 중국 협력업체의 인원들과 효율적인 커뮤니케이션을해야 했기 때문에 객관적인 근거를 제시하고 모호하지 않은 의사를 전달하는 방법을 배우며 협업 능력을 향상시켰습니다.`,
            ],
          },
        ],
        techStack: "Vue2 | Java | Spring boot | MySQL",
      },
    ],
  },
];
